name: Publish Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'graalvm'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create PEM files
        run: |
          mkdir -p src/main/resources
          echo "${JWT_PRIVATE}" > src/main/resources/private.pem
          echo "${JWT_PUBLIC}" > src/main/resources/public.pem
        env:
          JWT_PRIVATE: ${{ secrets.JWT_PRIVATE }}
          JWT_PUBLIC: ${{ secrets.JWT_PUBLIC }}

      - name: Build image using gradle and container plugin
        run: ./gradlew build -Dquarkus.native.enabled=true -Dquarkus.native.container-build=true -Dquarkus.package.jar.enabled=false -Dquarkus.container-image.build=true
        env:
          JWT_PUBLIC_LOCATION: ${{ secrets.JWT_PUBLIC_LOCATION }}
          JWT_PRIVATE_LOCATION: ${{ secrets.JWT_PRIVATE_LOCATION }}

      - name: Publish to Docker Hub
        run: |
          REPO_LOWER=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          TAG_WITHOUT_V=$(echo ${{ github.ref_name }} | sed 's/^v//')
          docker push $REPO_LOWER:$TAG_WITHOUT_V

          # Only push the latest tag if this is not a prerelease (doesn't contain a hyphen)
          if [[ ! $TAG_WITHOUT_V == *-* ]]; then
            echo "Pushing latest tag for stable release"
            docker push $REPO_LOWER:latest
          else
            echo "Skipping latest tag for prerelease"
          fi

      - name: Clean up PEM files
        if: always()
        run: rm -f src/main/resources/*.pem

  create_release:
    needs: build_and_push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release (stable)
        uses: softprops/action-gh-release@v2
        if: ${{ !contains(github.ref_name, '-') }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Go to https://hub.docker.com/r/kingg22/api-vacunas-panama to see the latest image"
          append_body: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release (prerelease)
        uses: softprops/action-gh-release@v2
        if: ${{ contains(github.ref_name, '-') }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Pre-release ${{ github.ref_name }}
          body: "Go to https://hub.docker.com/r/kingg22/api-vacunas-panama to see the prerelease image"
          append_body: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
