name: vacunas-app

services:
  db-vacunas:
    image: postgres:17-alpine
    container_name: db-pgsql-vacunas
    restart: on-failure
    ports:
        - "5435:5432"
    secrets:
        - DB_PASSWORD
    environment:
        POSTGRES_DB: vacunas
        POSTGRES_PASSWORD_FILE: /run/secrets/DB_PASSWORD
    volumes:
        - bd-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d vacunas -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      network-vacunas:
        ipv4_address: 172.22.0.2

  redis-vacunas:
    image: redis/redis-stack:latest
    container_name: cache-redis-vacunas
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - cache-persistence:/data
      - "./containers/redis.conf:/redis-stack.conf"
    networks:
      network-vacunas:
        ipv4_address: 172.22.0.3

  api-vacunas:
    image: kingg22/api-vacunas-panama:latest
    container_name: api-spring-vacunas
    env_file:
      - "containers/secrets/docker.env"
    secrets:
      - JWT_PUBLIC_KEY
      - JWT_PRIVATE_KEY
    restart: on-failure
    depends_on:
      db-vacunas:
          condition: service_healthy
      redis-vacunas:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      network-vacunas:
        ipv4_address: 172.22.0.5

volumes:
  bd-data:
    driver: local
  cache-persistence:
    driver: local
  msg-broker-rabbitmq:
    driver: local

networks:
  network-vacunas:
    attachable: true
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16

secrets:
  DB_PASSWORD:
    file: containers/secrets/db.env
  JWT_PUBLIC_KEY:
    file: containers/secrets/public.pem
  JWT_PRIVATE_KEY:
    file: containers/secrets/private.pem
